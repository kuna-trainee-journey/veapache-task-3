datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

model Skill {
  id            Int     @default(autoincrement()) @id
  name          String  @unique
  damage        Decimal
  cooldown      Decimal
  manaCost      Decimal
  playerSkills  PlayerSkill[]
}

model Weapon {
  id            Int     @default(autoincrement()) @id
  name          String  @unique
  damage        Decimal
  attackSpeed   Decimal
  playerWeapons PlayerWeapon[]
}

model PlayerSkill {
  playerId Int
  skillId  Int
  player   Player @relation(fields: [playerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  skill    Skill  @relation(fields: [skillId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([playerId, skillId], name: "player_skill_id")
}

model PlayerWeapon {
  playerId Int
  weaponId Int
  player   Player @relation(fields: [playerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  weapon   Weapon @relation(fields: [weaponId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([playerId, weaponId], name: "player_weapon_id")
}

model PlayerStat {
  id             Int    @default(autoincrement()) @id
  playerId       Int    @unique
  strength       Int    @default(1)
  magic          Int    @default(1)
  dexterity      Int    @default(1)
  vitality       Int    @default(1)
  life           Int    @default(1)
  mana           Int    @default(1)
  player         Player @relation(fields: [playerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Player {
  id            Int    @default(autoincrement()) @id
  name          String @unique
  level         Int    @default(0)
  experience    Int    @default(0)
  playerStats   PlayerStat?
  playerSkills  PlayerSkill[]
  playerWeapons PlayerWeapon[]
}
