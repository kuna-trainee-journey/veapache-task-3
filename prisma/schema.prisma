datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

model skills {
  skill_id      Int     @default(autoincrement()) @id
  name          String  @unique
  damage        Decimal
  cooldown      Decimal
  mana_cost     Decimal
  player_skills player_skills[]
}

model weapons {
  weapon_id      Int     @default(autoincrement()) @id
  name           String  @unique
  damage         Decimal
  attack_speed   Decimal
  player_weapons player_weapons[]
}

model player_skills {
  player_id Int
  skill_id  Int
  players   players @relation(fields: [player_id], references: [player_id], onDelete: Cascade, onUpdate: Cascade)
  skills    skills @relation(fields: [skill_id], references: [skill_id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([player_id, skill_id], name: "player_skill_id")
}

model player_weapons {
  player_id Int
  weapon_id Int
  players   players @relation(fields: [player_id], references: [player_id], onDelete: Cascade, onUpdate: Cascade)
  weapons   weapons @relation(fields: [weapon_id], references: [weapon_id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([player_id, weapon_id], name: "player_weapon_id")
}

model player_stats {
  player_stat_id Int     @default(autoincrement()) @id
  player_id      Int     @unique
  strength       Int
  magic          Int
  dexterity      Int
  vitality       Int
  life           Int
  mana           Int
  players        players @relation(fields: [player_id], references: [player_id], onDelete: Cascade, onUpdate: Cascade)
}

model players {
  player_id      Int              @default(autoincrement()) @id
  name           String           @unique
  level          Int
  experience     Int
  player_stats   player_stats?
  player_skills  player_skills[]
  player_weapons player_weapons[]
}
